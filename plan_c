
 _launcherToggleKey = GlobalKey<ToggleState>(); ##
_launcherOverlayKey = GlobalKey<SystemOverlayState>();  ###
 _statusToggleKey = GlobalKey<ToggleState>(); ##
_statusOverlayKey =  GlobalKey<SystemOverlayState>();
-----------------------------------------------------------------------
Keys here represent state modelled by either toggleState or SystemOverlayState?
Structure:

Widget SystemOverlay
        key: _launcherOverlayKey
        callback:  callback: (bool visible) {
                              _launcherToggleKey.currentState.toggled = visible;}

Widget LauncherToggleWidget
        toggleKey: _statusToggleKey
        overlay: (toogled)=> func(_launcherOverlayKey,
                                    visible: toggled,)

-------------------------------
I fear I may have made a boo-boo.

1)LauncherToggleWidget:
State is a key parameter for reasons that are likely irrelevant.
Callback with _setOverlayVisibility closure(overlay being show or hidden is a parameter) is based down into Toggle widget that itself
returns a gesture detector which itself passes bools back up into _setOverlayVisibility


On the surface it look like you're pinning the state of the widgets to a key
But that's partially a diversion....not really....

one widget's key member is actually used to set another's
so that wiget can indirectly set members for a third key
which in turn also sets a value in the second widget
they sync up